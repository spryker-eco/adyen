name: CI

on: [
        push
]

jobs:
    validation:
        name: "CS, ArchSniffer, PHPStan"
        runs-on: ubuntu-18.04
        strategy:
            fail-fast: false
            matrix:
                php-version: [
                        '7.4'
                ]

        env:
            APPLICATION_ENV: devtest
            APPLICATION_STORE: DE
            PROJECT: adyen

        steps:
            - uses: actions/checkout@v1
              with:
                  fetch-depth: 1

            - name: Configure sysctl limits
              run: |
                  sudo swapoff -a
                  sudo sysctl -w vm.swappiness=1
                  sudo sysctl -w fs.file-max=262144
                  sudo sysctl -w vm.max_map_count=262144

            - name: Composer get cache directory
              id: composer-cache
              run: |
                  echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Composer cache
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: Composer validate
              run: composer validate

            - name: Composer install
              run: |
                  composer --version
                  composer install

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-version }}
                  extensions: mbstring, intl, pdo_mysql
                  tools: composer:v2

            - name: Codecept build
              run: vendor/bin/codecept build --ansi

            - name: Run CodeStyle checks
              run: vendor/bin/phpcs -p -s --standard=vendor/spryker/code-sniffer/Spryker/ruleset.xml src/

            - name: Run Architecture rules
              run: vendor/bin/phpmd src/ text vendor/spryker/architecture-sniffer/src/ruleset.xml --minimumpriority 2

            - name: Run PHPStan
              run: vendor/bin/phpstan analyze -l 5 -c phpstan.neon src/

#       suite-tests:
#        name: "Suite tests(Stub)"
#        runs-on: ubuntu-18.04
#
#        steps:
#            -   name: Initialize env and run tests
#                run: |
#                     echo 'not implemented yet'
#                     TODO need to add to spryker-eco/eco-ci github action for testing modules
#                     git clone -b bugfix/spryker-shop-suite-contains-no-ci-scripts --single-branch https://github.com/spryker-eco/eco-ci.git ecoci
#                     ./ecoci/build/travis.sh
